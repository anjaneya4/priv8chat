<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width">
    <title>Peer-to-Peer Cue System --- Sender</title>
    <link rel="stylesheet" href="/public/style.css">
</head>
<body>
    <div class="center_body">
        <div id="status" class="status"></div>
        <input type="text" id="sendMessageBox" placeholder="Enter a message..." autofocus="true" />
        <button type="button" id="sendButton">Send</button>
        <button type="button" id="clearMsgsButton">Clear Msgs (Local)</button>
        <div class="message" id="message"></div>
    </div>
    <script src="/public/peer.min.js"></script>
    <script type="text/javascript">
        (function () {

            var destId = "";

                var peer = null; // own peer object
                var peerId = null;
                var conn = null;
                var oppositePeer = {
                    peerId: null
                };
                var msg = null;
                var command = null;
                var recvIdInput = '<%= peer_id %>';
                var status = document.getElementById("status");
                var message = document.getElementById("message");
                var resetButton = document.getElementById("resetButton");
                var fadeButton = document.getElementById("fadeButton");
                var offButton = document.getElementById("offButton");
                var sendMessageBox = document.getElementById("sendMessageBox");
                var sendButton = document.getElementById("sendButton");
                var clearMsgsButton = document.getElementById("clearMsgsButton");

                // get first "GET style" parameter from href
                // would have been easier to just use location.hash
                function getUrlParam(name) {
                    name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
                    var regexS = "[\\?&]" + name + "=([^&#]*)";
                    var regex = new RegExp(regexS);
                    var results = regex.exec(window.location.href);
                    if (results == null)
                        return null;
                    else
                        return results[1];
                };

                function ready() {
                    // Recieve data (only messages)
                    conn.on('data', function (data) {
                        addMessage("<span class=\"peerMsg\">Peer:</span> " + data);
                    });

                    // Handle close or error
                    conn.on('close', function () {
                        status.innerHTML = "Connection closed";
                    });
                    peer.on('disconnected', function () {
                        alert("Connection has been lost.");
                        peer.reconnect();
                    });
                    peer.on('error', function (err) {
                        alert('' + err)
                    });

                    // Check URL for comamnds that should be sent right away
                    command = getUrlParam("command");
                    if (command)
                        conn.send(command);

                    var cueString = "<span class=\"cueMsg\">Cue: </span>";
                    
                    // Listen for enter
                    sendMessageBox.onkeypress = function (e) {
                        var event = e || window.event;
                        var char = event.which || event.keyCode;
                        if (char == '13')
                            sendButton.click();
                    };
                    // Send message
                    sendButton.onclick = function () {
                        msg = sendMessageBox.value;
                        sendMessageBox.value = "";
                        conn.send(msg);
                        console.log("Sent: " + msg)
                        addMessage("<span class=\"selfMsg\">Self: </span> " + msg);
                    };
                    // Clear messages box
                    clearMsgsButton.onclick = function () {
                        clearMessages();
                    };
                };

                function initialize() {
                    // Create own peer object with connection to shared PeerJS server
                    peer = new Peer(null, {
                        debug: 2,
                        host: '<%= peer_server %>',
                        port: '<%= peer_port %>',
                        path: '/'
                    });

                    peer.on('open', function (id) {
                        peerId = id;
                        console.log('ID: ' + id);
                    });
                    peer.on('error', function (err) {
                        if (err.type === 'unavailable-id') {
                            alert('' + err);
                            peer.reconnect();
                        }
                        else
                            alert('' + err);
                    });
                };

                function join() {
                    initialize();
                    peer.on('open', function () {

                        if (conn) {
                            conn.close();
                        }

                        if (peer) {
                            peer.destroy();
                        }
                        
                        destId = recvIdInput;

                        // Create connection to shared PeerJS server
                        conn = peer.connect(destId, {
                            reliable: true
                        });
                        conn.on('open', function () {
                            oppositePeer.peerId = destId;
                            status.innerHTML = "Connected to: " + destId;
                            console.log("Connected to: " + destId)
                            ready();
                        });
                    });
                };

                function addMessage(msg) {
                    var now = new Date();
                    var h = now.getHours();
                    var m = addZero(now.getMinutes());
                    var s = addZero(now.getSeconds());

                    if (h > 12)
                        h -= 12;
                    else if (h === 0)
                        h = 12;

                    function addZero(t) {
                        if (t < 10)
                            t = "0" + t;
                        return t;
                    };

                    message.innerHTML = "<br><span class=\"msg-time\">" + h + ":" + m + ":" + s + "</span>  -  " + msg + message.innerHTML;
                };

                function clearMessages() {
                    message.innerHTML = "";
                    addMessage("Msgs cleared");
                };

                if (conn) {
                    ready();
                }
                join();

                
            })();
        </script>
    </body>
    </html>
